{
	"$schema": "https://json-schema.org/draft/2020-12/schema",
	"$id": "g4mf.node.schema.json",
	"title": "G4MF Scene Node",
	"type": "object",
	"description": "A node in the scene hierarchy, representing an object in the scene. Nodes may have children, a transform, and have other data attached to them to define the type of object they represent. Nodes are highly recommended to have a name, and if defined, the name MUST be unique within the G4MF file.",
	"allOf": [{ "$ref": "g4mf_item.schema.json" }],
	"properties": {
		"basis": {
			"type": "array",
			"description": "A square matrix representing the basis of the node's local transform relative to its parent. The matrix is stored in column-major order. MUST NOT be used with `rotor` or `scale`.",
			"items": {
				"type": "number"
			}
		},
		"camera": {
			"$ref": "g4mf.node.camera.schema.json"
		},
		"children": {
			"type": "array",
			"description": "The indices of this node's children.",
			"items": {
				"$ref": "g4mf_id.schema.json"
			},
			"uniqueItems": true,
			"minItems": 1,
			"minimum": 1
		},
		"light": {
			"$ref": "g4mf_id.schema.json",
			"description": "The index of the light that this node references. This is a reference to a light in the G4MF file's lights array. If not defined, this node is not a light source."
		},
		"mesh": {
			"$ref": "g4mf_id.schema.json",
			"description": "The index of the mesh that this node references. This is a reference to a mesh in the G4MF file's meshes array. If not defined, this node is not a mesh node."
		},
		"model": {
			"$ref": "g4mf_id.schema.json",
			"description": "The index of the model that this node references. This is a reference to a model in the G4MF file's models array. If not defined, this node is not a model node."
		},
		"physics": {
			"$ref": "physics/g4mf.node.physics.schema.json"
		},
		"position": {
			"type": "array",
			"description": "The node's local position relative to its parent in meters.",
			"items": {
				"type": "number"
			}
		},
		"rotor": {
			"type": "array",
			"description": "The node's rotation relative to its parent as a rotor. A rotor starts with a scalar part, a bivector part, and may optionally be followed by the rest of the even subalgebra. The scalar part is the first element at index 0, and the bivector parts come next. Within each part, elements are stored in a dimensionally-increasing order. MUST NOT be used with `basis`.",
			"items": {
				"type": "number",
				"minimum": -1.0,
				"maximum": 1.0
			}
		},
		"scale": {
			"type": "array",
			"description": "The node's scale relative to its own local rotation as a unitless multiplier. Must be positive. May be a single number for uniform scale, or an N-dimensional vector for non-uniform scale. MUST NOT be used with `basis`.",
			"items": {
				"type": "number",
				"exclusiveMinimum": 0.0
			}
		},
		"visible": {
			"type": "boolean",
			"description": "Whether the node is visible. If false, the node and its children are not rendered."
		}
	},
	"not": {
		"anyOf": [
			{ "required": ["basis", "rotor"] },
			{ "required": ["basis", "scale"] },
			{ "required": ["camera", "light"] },
			{ "required": ["camera", "mesh"] },
			{ "required": ["camera", "model"] },
			{ "required": ["camera", "physics"] },
			{ "required": ["light", "mesh"] },
			{ "required": ["light", "model"] },
			{ "required": ["light", "physics"] },
			{ "required": ["mesh", "model"] },
			{ "required": ["mesh", "physics"] },
			{ "required": ["model", "physics"] }
		]
	}
}
